import { useState } from 'react';
import { Card } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle } from '@/components/ui/dialog';
import { Badge } from '@/components/ui/badge';
import { Separator } from '@/components/ui/separator';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import Icon from '@/components/ui/icon';
import { LineChart, Line, BarChart, Bar, PieChart, Pie, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';

const lineData = [
  { name: '–Ø–Ω–≤', revenue: 4000, expenses: 2400, profit: 1600 },
  { name: '–§–µ–≤', revenue: 3000, expenses: 1398, profit: 1602 },
  { name: '–ú–∞—Ä', revenue: 5000, expenses: 3800, profit: 1200 },
  { name: '–ê–ø—Ä', revenue: 7800, expenses: 3908, profit: 3892 },
  { name: '–ú–∞–π', revenue: 5890, expenses: 4800, profit: 1090 },
  { name: '–ò—é–Ω', revenue: 8390, expenses: 3800, profit: 4590 },
  { name: '–ò—é–ª', revenue: 9490, expenses: 4300, profit: 5190 },
];

const barData = [
  { name: '–£—Ç–µ–ø–ª–∏—Ç–µ–ª—å', sales: 4200 },
  { name: '–ì–∏–¥—Ä–æ–∏–∑–æ–ª—è—Ü–∏—è', sales: 3800 },
  { name: '–ì–µ–æ—Å–∏–Ω—Ç–µ—Ç–∏–∫–∞', sales: 2900 },
  { name: '–ü–ª–æ—Å–∫–∞—è –∫—Ä–æ–≤–ª—è', sales: 2400 },
  { name: '–ó–≤—É–∫–æ–∏–∑–æ–ª—è—Ü–∏—è', sales: 1950 },
];

const pieData = [
  { name: '–†–æ–∑–Ω–∏—Ü–∞', value: 42, color: '#003d7a' },
  { name: '–û–ø—Ç', value: 35, color: '#ff7e1f' },
  { name: '–î–∏–ª–µ—Ä—ã', value: 15, color: '#0066a1' },
  { name: '–û–Ω–ª–∞–π–Ω', value: 8, color: '#ffb366' },
];

const forecastData = [
  { material: '–£—Ç–µ–ø–ª–∏—Ç–µ–ª—å ROCKWOOL', current: 842, forecast: 920, trend: '+9.3%', status: 'up' },
  { material: '–ì–∏–¥—Ä–æ–∏–∑–æ–ª—è—Ü–∏—è –¢–ï–•–ù–û–ù–ò–ö–û–õ–¨', current: 654, forecast: 710, trend: '+8.6%', status: 'up' },
  { material: '–ì–µ–æ—Å–∏–Ω—Ç–µ—Ç–∏–∫–∞', current: 423, forecast: 395, trend: '-6.6%', status: 'down' },
  { material: '–§–∞—Å–∞–¥–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã', current: 318, forecast: 355, trend: '+11.6%', status: 'up' },
  { material: '–ó–≤—É–∫–æ–∏–∑–æ–ª—è—Ü–∏—è', current: 267, forecast: 285, trend: '+6.7%', status: 'up' },
];

const Index = () => {
  const [activeTab, setActiveTab] = useState('dashboard');
  const [dateRange, setDateRange] = useState('7d');
  const [selectedRegion, setSelectedRegion] = useState('all');
  const [notifications, setNotifications] = useState(3);
  const [modalOpen, setModalOpen] = useState(false);
  const [modalContent, setModalContent] = useState<any>(null);
  const [selectedCategory, setSelectedCategory] = useState('all');
  const [searchQuery, setSearchQuery] = useState('');
  const [cart, setCart] = useState<any[]>([]);
  const [cartOpen, setCartOpen] = useState(false);
  const [productQuantity, setProductQuantity] = useState(1);
  const [orders, setOrders] = useState<any[]>([
    {
      id: '–ó–ö-2850',
      date: '2024-10-18',
      status: 'delivered',
      total: 543800,
      items: [
        { name: '–ì–∏–¥—Ä–æ–∏–∑–æ–ª—è—Ü–∏—è –¢–ï–•–ù–û–ù–ò–ö–û–õ–¨', quantity: 38, price: 3200, image: 'üíß' },
        { name: '–£—Ç–µ–ø–ª–∏—Ç–µ–ª—å ROCKWOOL', quantity: 120, price: 2850, image: 'üèóÔ∏è' }
      ],
      customer: '–û–û–û "–°—Ç—Ä–æ–π–¢–µ—Ö"',
      address: '–ú–æ—Å–∫–≤–∞, —É–ª. –°—Ç—Ä–æ–∏—Ç–µ–ª–µ–π, –¥. 15',
      trackingSteps: [
        { label: '–ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω', date: '18.10.2024 10:15', completed: true },
        { label: '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º', date: '18.10.2024 10:45', completed: true },
        { label: '–°–æ–±—Ä–∞–Ω –Ω–∞ —Å–∫–ª–∞–¥–µ', date: '18.10.2024 14:20', completed: true },
        { label: '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –¥–æ—Å—Ç–∞–≤–∫—É', date: '19.10.2024 08:00', completed: true },
        { label: '–î–æ—Å—Ç–∞–≤–ª–µ–Ω', date: '19.10.2024 15:30', completed: true }
      ]
    },
    {
      id: '–ó–ö-2845',
      date: '2024-10-17',
      status: 'in-transit',
      total: 728500,
      items: [
        { name: '–ü–ª–æ—Å–∫–∞—è –∫—Ä–æ–≤–ª—è LOGICROOF', quantity: 62, price: 4500, image: 'üè¢' },
        { name: '–§–∞—Å–∞–¥–Ω—ã–µ –ø–∞–Ω–µ–ª–∏ Hauberk', quantity: 112, price: 2100, image: 'üß±' }
      ],
      customer: '–û–û–û "–ú–æ–Ω–æ–ª–∏—Ç–°—Ç—Ä–æ–π"',
      address: '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥, –ù–µ–≤—Å–∫–∏–π –ø—Ä., –¥. 88',
      trackingSteps: [
        { label: '–ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω', date: '17.10.2024 09:20', completed: true },
        { label: '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º', date: '17.10.2024 10:00', completed: true },
        { label: '–°–æ–±—Ä–∞–Ω –Ω–∞ —Å–∫–ª–∞–¥–µ', date: '17.10.2024 16:30', completed: true },
        { label: '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –¥–æ—Å—Ç–∞–≤–∫—É', date: '18.10.2024 07:15', completed: true },
        { label: '–î–æ—Å—Ç–∞–≤–ª–µ–Ω', date: '', completed: false, estimated: '20.10.2024' }
      ]
    },
    {
      id: '–ó–ö-2843',
      date: '2024-10-16',
      status: 'processing',
      total: 445600,
      items: [
        { name: '–ó–≤—É–∫–æ–∏–∑–æ–ª—è—Ü–∏—è ROCKWOOL', quantity: 76, price: 3400, image: 'üîá' },
        { name: '–ì–µ–æ—Ç–µ–∫—Å—Ç–∏–ª—å –î–æ—Ä–Ω–∏—Ç', quantity: 2890, price: 45, image: 'üó∫Ô∏è' }
      ],
      customer: '–ò–ü –°–æ–∫–æ–ª–æ–≤ –ê.–í.',
      address: '–ö–∞–∑–∞–Ω—å, –ø—Ä. –ü–æ–±–µ–¥—ã, –¥. 45',
      trackingSteps: [
        { label: '–ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω', date: '16.10.2024 14:50', completed: true },
        { label: '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º', date: '16.10.2024 15:20', completed: true },
        { label: '–°–æ–±—Ä–∞–Ω –Ω–∞ —Å–∫–ª–∞–¥–µ', date: '', completed: false, estimated: '20.10.2024 12:00' },
        { label: '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –¥–æ—Å—Ç–∞–≤–∫—É', date: '', completed: false },
        { label: '–î–æ—Å—Ç–∞–≤–ª–µ–Ω', date: '', completed: false }
      ]
    },
    {
      id: '–ó–ö-2840',
      date: '2024-10-15',
      status: 'cancelled',
      total: 156800,
      items: [
        { name: '–ë–∞–∑–∞–ª—å—Ç–æ–≤–∞—è –≤–∞—Ç–∞ ISOVER', quantity: 143, price: 2200, image: 'üèóÔ∏è' }
      ],
      customer: '–û–û–û "–†–µ–º–æ–Ω—Ç+"',
      address: '–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥, —É–ª. –õ–µ–Ω–∏–Ω–∞, –¥. 23',
      trackingSteps: [
        { label: '–ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω', date: '15.10.2024 11:10', completed: true },
        { label: '–û—Ç–º–µ–Ω—ë–Ω –∫–ª–∏–µ–Ω—Ç–æ–º', date: '15.10.2024 12:40', completed: true }
      ]
    }
  ]);
  
  const openModal = (content: any) => {
    setModalContent(content);
    setModalOpen(true);
    if (content.type === 'product') {
      setProductQuantity(1);
    }
  };

  const addToCart = (product: any, quantity: number) => {
    const existingItem = cart.find(item => item.id === product.id);
    if (existingItem) {
      setCart(cart.map(item => 
        item.id === product.id 
          ? { ...item, quantity: item.quantity + quantity }
          : item
      ));
    } else {
      setCart([...cart, { ...product, quantity }]);
    }
    setModalOpen(false);
    setTimeout(() => {
      setCartOpen(true);
    }, 300);
  };

  const createOrder = (customerData: any) => {
    const newOrder = {
      id: `–ó–ö-${Math.floor(Math.random() * 10000 + 2000)}`,
      date: new Date().toISOString().split('T')[0],
      status: 'processing',
      total: getCartTotal(),
      items: cart.map(item => ({
        name: item.name,
        quantity: item.quantity,
        price: parseInt(item.price.replace(/[^0-9]/g, '')),
        image: item.image
      })),
      customer: customerData.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ',
      address: customerData.address || '–ù–µ —É–∫–∞–∑–∞–Ω–æ',
      trackingSteps: [
        { label: '–ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω', date: new Date().toLocaleString('ru-RU'), completed: true },
        { label: '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º', date: '', completed: false },
        { label: '–°–æ–±—Ä–∞–Ω –Ω–∞ —Å–∫–ª–∞–¥–µ', date: '', completed: false },
        { label: '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –¥–æ—Å—Ç–∞–≤–∫—É', date: '', completed: false },
        { label: '–î–æ—Å—Ç–∞–≤–ª–µ–Ω', date: '', completed: false }
      ]
    };
    setOrders([newOrder, ...orders]);
    return newOrder.id;
  };

  const getStatusLabel = (status: string) => {
    const labels: any = {
      'processing': '–í –æ–±—Ä–∞–±–æ—Ç–∫–µ',
      'in-transit': '–í –ø—É—Ç–∏',
      'delivered': '–î–æ—Å—Ç–∞–≤–ª–µ–Ω',
      'cancelled': '–û—Ç–º–µ–Ω—ë–Ω'
    };
    return labels[status] || status;
  };

  const getStatusColor = (status: string) => {
    const colors: any = {
      'processing': 'bg-blue-100 text-blue-700',
      'in-transit': 'bg-orange-100 text-orange-700',
      'delivered': 'bg-green-100 text-green-700',
      'cancelled': 'bg-red-100 text-red-700'
    };
    return colors[status] || 'bg-gray-100 text-gray-700';
  };

  const removeFromCart = (productId: number) => {
    setCart(cart.filter(item => item.id !== productId));
  };

  const updateCartQuantity = (productId: number, quantity: number) => {
    if (quantity <= 0) {
      removeFromCart(productId);
    } else {
      setCart(cart.map(item => 
        item.id === productId ? { ...item, quantity } : item
      ));
    }
  };

  const getCartTotal = () => {
    return cart.reduce((total, item) => {
      const price = parseInt(item.price.replace(/[^0-9]/g, ''));
      return total + (price * item.quantity);
    }, 0);
  };

  const getCartItemsCount = () => {
    return cart.reduce((total, item) => total + item.quantity, 0);
  };

  const categories = [
    { id: 'all', label: '–í—Å–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã', icon: 'Grid3x3' },
    { id: 'insulation', label: '–£—Ç–µ–ø–ª–∏—Ç–µ–ª—å', icon: 'Home' },
    { id: 'waterproofing', label: '–ì–∏–¥—Ä–æ–∏–∑–æ–ª—è—Ü–∏—è', icon: 'Droplet' },
    { id: 'roofing', label: '–ü–ª–æ—Å–∫–∞—è –∫—Ä–æ–≤–ª—è', icon: 'Building2' },
    { id: 'facade', label: '–§–∞—Å–∞–¥–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã', icon: 'Layers' },
    { id: 'geosynthetics', label: '–ì–µ–æ—Å–∏–Ω—Ç–µ—Ç–∏–∫–∞', icon: 'Map' },
    { id: 'soundproofing', label: '–ó–≤—É–∫–æ–∏–∑–æ–ª—è—Ü–∏—è', icon: 'Volume2' },
  ];

  const products = [
    { id: 1, name: 'ROCKWOOL –õ–∞–π—Ç –ë–∞—Ç—Ç—Å –°–∫–∞–Ω–¥–∏–∫', category: 'insulation', price: '‚ÇΩ2,850/–º¬≤', stock: 12450, rating: 4.8, image: 'üèóÔ∏è', brand: 'ROCKWOOL', specs: '1000√ó600√ó50 –º–º' },
    { id: 2, name: '–¢–ï–•–ù–û–ù–ò–ö–û–õ–¨ –¢–µ—Ö–Ω–æ—ç–ª–∞—Å—Ç –≠–ü–ü', category: 'waterproofing', price: '‚ÇΩ3,200/–º¬≤', stock: 8340, rating: 4.9, image: 'üíß', brand: '–¢–ï–•–ù–û–ù–ò–ö–û–õ–¨', specs: '–†—É–ª–æ–Ω 10√ó1 –º' },
    { id: 3, name: 'LOGICPIR –ë–∞–ª–∫–æ–Ω', category: 'insulation', price: '‚ÇΩ1,950/–º¬≤', stock: 15600, rating: 4.7, image: 'üèóÔ∏è', brand: '–¢–ï–•–ù–û–ù–ò–ö–û–õ–¨', specs: '1185√ó585√ó30 –º–º' },
    { id: 4, name: '–ì–∏–¥—Ä–æ–∏–∑–æ–ª—è—Ü–∏—è –§–∏–ª–∏–∑–æ–ª –°—Ç–∞–Ω–¥–∞—Ä—Ç', category: 'waterproofing', price: '‚ÇΩ1,450/–º¬≤', stock: 9870, rating: 4.6, image: 'üíß', brand: '–§–∏–ª–∏–∑–æ–ª', specs: '–†—É–ª–æ–Ω 15√ó1 –º' },
    { id: 5, name: '–ü–í–• –º–µ–º–±—Ä–∞–Ω–∞ LOGICROOF V-RP', category: 'roofing', price: '‚ÇΩ4,500/–º¬≤', stock: 6230, rating: 4.9, image: 'üè¢', brand: '–¢–ï–•–ù–û–ù–ò–ö–û–õ–¨', specs: '2.05√ó20 –º' },
    { id: 6, name: '–§–∞—Å–∞–¥–Ω—ã–µ –ø–∞–Ω–µ–ª–∏ Hauberk', category: 'facade', price: '‚ÇΩ2,100/–º¬≤', stock: 11200, rating: 4.8, image: 'üß±', brand: '–¢–ï–•–ù–û–ù–ò–ö–û–õ–¨', specs: '1000√ó250 –º–º' },
    { id: 7, name: '–ì–µ–æ—Ç–µ–∫—Å—Ç–∏–ª—å –î–æ—Ä–Ω–∏—Ç 200', category: 'geosynthetics', price: '‚ÇΩ45/–º¬≤', stock: 28900, rating: 4.5, image: 'üó∫Ô∏è', brand: '–î–æ—Ä–Ω–∏—Ç', specs: '–†—É–ª–æ–Ω 50√ó2.2 –º' },
    { id: 8, name: 'ROCKWOOL –ê–∫—É—Å—Ç–∏–∫ –ë–∞—Ç—Ç—Å', category: 'soundproofing', price: '‚ÇΩ3,400/–º¬≤', stock: 7650, rating: 4.9, image: 'üîá', brand: 'ROCKWOOL', specs: '1000√ó600√ó50 –º–º' },
    { id: 9, name: '–ë–∞–∑–∞–ª—å—Ç–æ–≤–∞—è –≤–∞—Ç–∞ ISOVER', category: 'insulation', price: '‚ÇΩ2,200/–º¬≤', stock: 14300, rating: 4.6, image: 'üèóÔ∏è', brand: 'ISOVER', specs: '1170√ó610√ó50 –º–º' },
    { id: 10, name: '–ú–∞—Å—Ç–∏–∫–∞ –±–∏—Ç—É–º–Ω–∞—è AquaMast', category: 'waterproofing', price: '‚ÇΩ890/–º¬≤', stock: 18400, rating: 4.4, image: 'üíß', brand: '–¢–ï–•–ù–û–ù–ò–ö–û–õ–¨', specs: '–í–µ–¥—Ä–æ 18 –∫–≥' },
    { id: 11, name: '–§–∞—Å–∞–¥–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ Ceresit', category: 'facade', price: '‚ÇΩ5,200/–º¬≤', stock: 4580, rating: 4.8, image: 'üß±', brand: 'Ceresit', specs: '–ö–æ–º–ø–ª–µ–∫—Ç' },
    { id: 12, name: '–ì–µ–æ–º–µ–º–±—Ä–∞–Ω–∞ LDPE', category: 'geosynthetics', price: '‚ÇΩ320/–º¬≤', stock: 22100, rating: 4.7, image: 'üó∫Ô∏è', brand: 'Solmax', specs: '–†—É–ª–æ–Ω 50√ó7 –º' },
  ];

  const filteredProducts = products.filter(product => {
    const matchesCategory = selectedCategory === 'all' || product.category === selectedCategory;
    const matchesSearch = product.name.toLowerCase().includes(searchQuery.toLowerCase()) || 
                          product.brand.toLowerCase().includes(searchQuery.toLowerCase());
    return matchesCategory && matchesSearch;
  });

  const menuItems = [
    { id: 'dashboard', label: '–î–∞—à–±–æ—Ä–¥', icon: 'LayoutDashboard' },
    { id: 'catalog', label: '–ö–∞—Ç–∞–ª–æ–≥', icon: 'Grid3x3' },
    { id: 'orders', label: '–ó–∞–∫–∞–∑—ã', icon: 'ShoppingBag' },
    { id: 'reports', label: '–û—Ç—á—ë—Ç—ã', icon: 'FileText' },
    { id: 'analytics', label: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞', icon: 'TrendingUp' },
    { id: 'history', label: '–ò—Å—Ç–æ—Ä–∏—è', icon: 'Clock' },
  ];

  const metrics = [
    { title: '–í—ã—Ä—É—á–∫–∞ –∑–∞ –º–µ—Å—è—Ü', value: '‚ÇΩ18,4 –º–ª–Ω', change: '+15.3%', trend: 'up', icon: 'TrendingUp' },
    { title: '–û—Ç–≥—Ä—É–∂–µ–Ω–æ –º¬≤', value: '42,847', change: '+8.7%', trend: 'up', icon: 'Package' },
    { title: '–ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤', value: '184', change: '+12%', trend: 'up', icon: 'ShoppingCart' },
    { title: '–ö–ª–∏–µ–Ω—Ç–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é', value: '457', change: '+5.2%', trend: 'up', icon: 'Users' },
  ];

  return (
    <div className="flex min-h-screen bg-background">
      <aside className="w-64 border-r border-sidebar-border bg-sidebar">
        <div className="p-6">
          <div className="mb-8">
            <img 
              src="https://cdn.poehali.dev/files/a3da5ee5-6618-43ea-83b8-86810035fa1a.png" 
              alt="BAUSTOV" 
              className="w-full"
            />
            <p className="text-xs text-sidebar-foreground/60 mt-2 text-center">–°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã</p>
          </div>

          <nav className="space-y-1">
            {menuItems.map((item) => (
              <button
                key={item.id}
                onClick={() => setActiveTab(item.id)}
                className={`w-full flex items-center gap-3 px-4 py-3 rounded-lg transition-all duration-200 ${
                  activeTab === item.id
                    ? 'bg-sidebar-primary text-sidebar-primary-foreground shadow-sm'
                    : 'text-sidebar-foreground/80 hover:bg-sidebar-accent hover:text-sidebar-accent-foreground'
                }`}
              >
                <Icon name={item.icon} size={20} />
                <span className="font-medium">{item.label}</span>
              </button>
            ))}
          </nav>
        </div>
      </aside>

      <main className="flex-1 overflow-auto">
        <header className="border-b border-border bg-card/50 backdrop-blur-sm sticky top-0 z-10">
          <div className="flex items-center justify-between px-8 py-4">
            <div>
              <h2 className="text-2xl font-semibold">–î–∞—à–±–æ—Ä–¥</h2>
              <p className="text-sm text-muted-foreground mt-1">–û–±–∑–æ—Ä –∫–ª—é—á–µ–≤—ã—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π</p>
            </div>
            
            <div className="flex items-center gap-3">
              <Select value={dateRange} onValueChange={setDateRange}>
                <SelectTrigger className="w-[180px]">
                  <SelectValue />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="24h">–ü–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞</SelectItem>
                  <SelectItem value="7d">–ü–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π</SelectItem>
                  <SelectItem value="30d">–ü–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π</SelectItem>
                  <SelectItem value="90d">–ü–æ—Å–ª–µ–¥–Ω–∏–µ 90 –¥–Ω–µ–π</SelectItem>
                </SelectContent>
              </Select>
              
              <Select value={selectedRegion} onValueChange={setSelectedRegion}>
                <SelectTrigger className="w-[160px]">
                  <SelectValue />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="all">–í—Å–µ —Ä–µ–≥–∏–æ–Ω—ã</SelectItem>
                  <SelectItem value="moscow">–ú–æ—Å–∫–≤–∞</SelectItem>
                  <SelectItem value="spb">–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥</SelectItem>
                  <SelectItem value="kazan">–ö–∞–∑–∞–Ω—å</SelectItem>
                  <SelectItem value="ekb">–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥</SelectItem>
                </SelectContent>
              </Select>
              
              <Button 
                variant="outline" 
                size="icon"
                onClick={() => openModal({ type: 'refresh' })}
              >
                <Icon name="RefreshCcw" size={18} />
              </Button>

              <Button 
                variant="outline"
                size="icon"
                className="relative"
                onClick={() => {
                  setNotifications(0);
                  openModal({ type: 'notifications' });
                }}
              >
                <Icon name="Bell" size={18} />
                {notifications > 0 && (
                  <span className="absolute -top-1 -right-1 w-5 h-5 bg-secondary text-white text-xs rounded-full flex items-center justify-center font-bold">
                    {notifications}
                  </span>
                )}
              </Button>

              <Button 
                variant="outline"
                size="icon"
                className="relative"
                onClick={() => setCartOpen(true)}
              >
                <Icon name="ShoppingCart" size={18} />
                {getCartItemsCount() > 0 && (
                  <span className="absolute -top-1 -right-1 w-5 h-5 bg-primary text-white text-xs rounded-full flex items-center justify-center font-bold">
                    {getCartItemsCount()}
                  </span>
                )}
              </Button>
              
              <Button onClick={() => openModal({ type: 'export', dateRange })}>
                <Icon name="Download" size={18} className="mr-2" />
                –≠–∫—Å–ø–æ—Ä—Ç
              </Button>
            </div>
          </div>
        </header>

        <div className="p-8">
          {activeTab === 'catalog' ? (
            <div className="space-y-6">
              <div className="flex items-center justify-between">
                <div>
                  <h2 className="text-2xl font-bold">–ö–∞—Ç–∞–ª–æ–≥ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤</h2>
                  <p className="text-sm text-muted-foreground mt-1">–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏ –Ω–∞–π–¥–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ç–æ–≤–∞—Ä</p>
                </div>
                <div className="flex items-center gap-3">
                  <div className="relative">
                    <Icon name="Search" size={18} className="absolute left-3 top-1/2 -translate-y-1/2 text-muted-foreground" />
                    <input
                      type="text"
                      placeholder="–ü–æ–∏—Å–∫ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤..."
                      value={searchQuery}
                      onChange={(e) => setSearchQuery(e.target.value)}
                      className="pl-10 pr-4 py-2 border border-input rounded-lg focus:outline-none focus:ring-2 focus:ring-ring w-64"
                    />
                  </div>
                </div>
              </div>

              <div className="flex gap-2 overflow-x-auto pb-2">
                {categories.map((cat) => (
                  <button
                    key={cat.id}
                    onClick={() => setSelectedCategory(cat.id)}
                    className={`flex items-center gap-2 px-4 py-2 rounded-lg whitespace-nowrap transition-all ${
                      selectedCategory === cat.id
                        ? 'bg-primary text-primary-foreground shadow-md'
                        : 'bg-card border border-border hover:border-primary/50'
                    }`}
                  >
                    <Icon name={cat.icon} size={18} />
                    <span className="text-sm font-medium">{cat.label}</span>
                  </button>
                ))}
              </div>

              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4">
                {filteredProducts.map((product) => (
                  <Card 
                    key={product.id} 
                    className="overflow-hidden hover:shadow-xl transition-all duration-300 cursor-pointer group"
                    onClick={() => openModal({ type: 'product', product })}
                  >
                    <div className="aspect-square bg-gradient-to-br from-primary/5 to-secondary/5 flex items-center justify-center text-6xl group-hover:scale-110 transition-transform">
                      {product.image}
                    </div>
                    <div className="p-4 space-y-3">
                      <div>
                        <p className="text-xs text-primary font-semibold">{product.brand}</p>
                        <h3 className="font-semibold text-sm mt-1 line-clamp-2 min-h-[2.5rem]">{product.name}</h3>
                      </div>
                      
                      <div className="flex items-center gap-1">
                        {[...Array(5)].map((_, i) => (
                          <Icon 
                            key={i} 
                            name="Star" 
                            size={14} 
                            className={i < Math.floor(product.rating) ? 'fill-yellow-400 text-yellow-400' : 'text-gray-300'}
                          />
                        ))}
                        <span className="text-xs text-muted-foreground ml-1">({product.rating})</span>
                      </div>

                      <div className="pt-2 border-t border-border">
                        <div className="flex items-center justify-between">
                          <div>
                            <p className="text-lg font-bold text-primary">{product.price}</p>
                            <p className="text-xs text-muted-foreground">–í –Ω–∞–ª–∏—á–∏–∏: {product.stock.toLocaleString()} –º¬≤</p>
                          </div>
                          <Button 
                            size="sm" 
                            className="group-hover:bg-primary group-hover:text-primary-foreground"
                            onClick={(e) => {
                              e.stopPropagation();
                              addToCart(product, 1);
                            }}
                          >
                            <Icon name="ShoppingCart" size={16} />
                          </Button>
                        </div>
                      </div>
                    </div>
                  </Card>
                ))}
              </div>

              {filteredProducts.length === 0 && (
                <Card className="p-12 text-center">
                  <Icon name="PackageX" size={64} className="mx-auto text-muted-foreground mb-4" />
                  <h3 className="text-xl font-semibold mb-2">–¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
                  <p className="text-muted-foreground">–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã –∏–ª–∏ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å</p>
                </Card>
              )}
            </div>
          ) : activeTab === 'orders' ? (
            <div className="space-y-6">
              <div className="flex items-center justify-between">
                <div>
                  <h2 className="text-2xl font-bold">–ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤</h2>
                  <p className="text-sm text-muted-foreground mt-1">–û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ —Å—Ç–∞—Ç—É—Å –≤–∞—à–∏—Ö –∑–∞–∫–∞–∑–æ–≤</p>
                </div>
                <div className="flex items-center gap-2">
                  <Badge variant="secondary">{orders.length} –∑–∞–∫–∞–∑–æ–≤</Badge>
                </div>
              </div>

              <div className="grid grid-cols-1 gap-4">
                {orders.map((order) => (
                  <Card 
                    key={order.id} 
                    className="p-6 hover:shadow-lg transition-all cursor-pointer"
                    onClick={() => openModal({ type: 'order-details', order })}
                  >
                    <div className="flex items-start justify-between mb-4">
                      <div className="flex items-start gap-4">
                        <div className="w-12 h-12 rounded-xl bg-primary/10 flex items-center justify-center flex-shrink-0">
                          <Icon name="Package" size={24} className="text-primary" />
                        </div>
                        <div>
                          <h3 className="font-bold text-lg">–ó–∞–∫–∞–∑ #{order.id}</h3>
                          <p className="text-sm text-muted-foreground">{new Date(order.date).toLocaleDateString('ru-RU', { day: 'numeric', month: 'long', year: 'numeric' })}</p>
                          <p className="text-sm text-muted-foreground mt-1">{order.customer}</p>
                        </div>
                      </div>
                      <div className="text-right">
                        <Badge className={getStatusColor(order.status)}>
                          {getStatusLabel(order.status)}
                        </Badge>
                        <p className="text-xl font-bold text-primary mt-2">‚ÇΩ{order.total.toLocaleString()}</p>
                      </div>
                    </div>

                    <Separator className="mb-4" />

                    <div className="space-y-2">
                      {order.items.map((item: any, idx: number) => (
                        <div key={idx} className="flex items-center justify-between text-sm">
                          <div className="flex items-center gap-2">
                            <span className="text-xl">{item.image}</span>
                            <span>{item.name}</span>
                          </div>
                          <span className="text-muted-foreground">{item.quantity} –º¬≤ √ó ‚ÇΩ{item.price.toLocaleString()}</span>
                        </div>
                      ))}
                    </div>

                    <Separator className="my-4" />

                    <div className="flex items-center justify-between">
                      <div className="flex items-center gap-2 text-sm text-muted-foreground">
                        <Icon name="MapPin" size={16} />
                        <span className="line-clamp-1">{order.address}</span>
                      </div>
                      <Button variant="ghost" size="sm">
                        –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                        <Icon name="ChevronRight" size={16} className="ml-1" />
                      </Button>
                    </div>
                  </Card>
                ))}
              </div>

              {orders.length === 0 && (
                <Card className="p-12 text-center">
                  <Icon name="ShoppingBag" size={64} className="mx-auto text-muted-foreground mb-4" />
                  <h3 className="text-xl font-semibold mb-2">–ó–∞–∫–∞–∑–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç</h3>
                  <p className="text-muted-foreground mb-6">–û—Ñ–æ—Ä–º–∏—Ç–µ –ø–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑ –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞</p>
                  <Button onClick={() => setActiveTab('catalog')}>
                    –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥
                  </Button>
                </Card>
              )}
            </div>
          ) : (
            <>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
            {metrics.map((metric, index) => (
              <Card 
                key={index} 
                className="p-6 hover:shadow-lg transition-all duration-300 animate-fade-in border-l-4 cursor-pointer"
                style={{ 
                  borderLeftColor: index === 0 ? '#003d7a' : index === 1 ? '#ff7e1f' : index === 2 ? '#003d7a' : '#ff7e1f',
                  animationDelay: `${index * 100}ms`
                }}
                onClick={() => openModal({
                  type: 'metric',
                  title: metric.title,
                  value: metric.value,
                  change: metric.change,
                  trend: metric.trend,
                  icon: metric.icon
                })}
              >
                <div className="flex items-start justify-between mb-4">
                  <div className={`w-12 h-12 rounded-xl flex items-center justify-center ${
                    index === 0 ? 'bg-primary/10' : index === 1 ? 'bg-secondary/10' : index === 2 ? 'bg-primary/10' : 'bg-secondary/10'
                  }`}>
                    <Icon 
                      name={metric.icon} 
                      size={24} 
                      className={
                        index === 0 ? 'text-primary' : index === 1 ? 'text-secondary' : index === 2 ? 'text-primary' : 'text-secondary'
                      }
                    />
                  </div>
                  <span className={`text-sm font-semibold flex items-center gap-1 ${
                    metric.trend === 'up' ? 'text-green-600' : 'text-red-600'
                  }`}>
                    {metric.change}
                    <Icon name={metric.trend === 'up' ? 'ArrowUp' : 'ArrowDown'} size={14} />
                  </span>
                </div>
                <p className="text-sm text-muted-foreground mb-1">{metric.title}</p>
                <p className="text-3xl font-bold">{metric.value}</p>
              </Card>
            ))}
          </div>

          <div className="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6">
            <Card className="p-6 animate-fade-in" style={{ animationDelay: '400ms' }}>
              <div className="flex items-center justify-between mb-6">
                <div>
                  <h3 className="text-lg font-semibold">–î–∏–Ω–∞–º–∏–∫–∞ –≤—ã—Ä—É—á–∫–∏</h3>
                  <p className="text-sm text-muted-foreground">–î–æ—Ö–æ–¥—ã, —Ä–∞—Å—Ö–æ–¥—ã –∏ –ø—Ä–∏–±—ã–ª—å</p>
                </div>
                <Button 
                  variant="ghost" 
                  size="icon"
                  onClick={() => alert('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥—Ä–∞—Ñ–∏–∫–∞:\n‚Ä¢ –ò–∑–º–µ–Ω–∏—Ç—å –ø–µ—Ä–∏–æ–¥\n‚Ä¢ –î–æ–±–∞–≤–∏—Ç—å –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å\n‚Ä¢ –≠–∫—Å–ø–æ—Ä—Ç –≤ PDF')}
                >
                  <Icon name="MoreVertical" size={18} />
                </Button>
              </div>
              <ResponsiveContainer width="100%" height={300}>
                <LineChart data={lineData}>
                  <CartesianGrid strokeDasharray="3 3" stroke="#e5e7eb" />
                  <XAxis dataKey="name" stroke="#6b7280" />
                  <YAxis stroke="#6b7280" />
                  <Tooltip 
                    contentStyle={{ 
                      backgroundColor: '#fff', 
                      border: '1px solid #e5e7eb',
                      borderRadius: '0.75rem',
                      boxShadow: '0 4px 6px -1px rgb(0 0 0 / 0.1)'
                    }}
                  />
                  <Legend />
                  <Line type="monotone" dataKey="revenue" stroke="#003d7a" strokeWidth={3} name="–î–æ—Ö–æ–¥—ã" />
                  <Line type="monotone" dataKey="expenses" stroke="#EF4444" strokeWidth={3} name="–†–∞—Å—Ö–æ–¥—ã" />
                  <Line type="monotone" dataKey="profit" stroke="#ff7e1f" strokeWidth={3} name="–ü—Ä–∏–±—ã–ª—å" />
                </LineChart>
              </ResponsiveContainer>
            </Card>

            <Card className="p-6 animate-fade-in" style={{ animationDelay: '500ms' }}>
              <div className="flex items-center justify-between mb-6">
                <div>
                  <h3 className="text-lg font-semibold">–ü—Ä–æ–¥–∞–∂–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º</h3>
                  <p className="text-sm text-muted-foreground">–¢–æ–ø-5 –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤</p>
                </div>
                <Button 
                  variant="ghost" 
                  size="icon"
                  onClick={() => alert('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥—Ä–∞—Ñ–∏–∫–∞:\n‚Ä¢ –ò–∑–º–µ–Ω–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏\n‚Ä¢ –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞\n‚Ä¢ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö')}
                >
                  <Icon name="MoreVertical" size={18} />
                </Button>
              </div>
              <ResponsiveContainer width="100%" height={300}>
                <BarChart data={barData}>
                  <CartesianGrid strokeDasharray="3 3" stroke="#e5e7eb" />
                  <XAxis dataKey="name" stroke="#6b7280" />
                  <YAxis stroke="#6b7280" />
                  <Tooltip 
                    contentStyle={{ 
                      backgroundColor: '#fff', 
                      border: '1px solid #e5e7eb',
                      borderRadius: '0.75rem',
                      boxShadow: '0 4px 6px -1px rgb(0 0 0 / 0.1)'
                    }}
                  />
                  <Bar dataKey="sales" fill="#ff7e1f" radius={[8, 8, 0, 0]} name="–ü—Ä–æ–¥–∞–∂–∏" />
                </BarChart>
              </ResponsiveContainer>
            </Card>
          </div>

          <Card className="p-6 mb-6 animate-fade-in bg-gradient-to-br from-primary/5 to-secondary/5 border-2 border-primary/20" style={{ animationDelay: '800ms' }}>
            <div className="flex items-center justify-between mb-6">
              <div>
                <div className="flex items-center gap-2 mb-2">
                  <Icon name="TrendingUp" size={24} className="text-primary" />
                  <h3 className="text-xl font-bold">–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ—Å—Ç–∞–≤–æ–∫ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –º–µ—Å—è—Ü</h3>
                </div>
                <p className="text-sm text-muted-foreground">–ù–∞ –æ—Å–Ω–æ–≤–µ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –∏ —Ç–µ–∫—É—â–∏—Ö —Ç—Ä–µ–Ω–¥–æ–≤</p>
              </div>
              <Button 
                variant="outline"
                onClick={() => {
                  alert('–≠–∫—Å–ø–æ—Ä—Ç –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ—Å—Ç–∞–≤–æ–∫...');
                  setTimeout(() => alert('–§–∞–π–ª "–ü—Ä–æ–≥–Ω–æ–∑_–ø–æ—Å—Ç–∞–≤–æ–∫_–Ω–æ—è–±—Ä—å_2025.pdf" —Å–æ—Ö—Ä–∞–Ω—ë–Ω!'), 500);
                }}
              >
                <Icon name="FileDown" size={18} className="mr-2" />
                –≠–∫—Å–ø–æ—Ä—Ç –ø—Ä–æ–≥–Ω–æ–∑–∞
              </Button>
            </div>
            
            <div className="space-y-3">
              {forecastData.map((item, index) => (
                <div key={index} className="flex items-center justify-between p-4 bg-card rounded-lg hover:shadow-md transition-all">
                  <div className="flex-1">
                    <div className="flex items-center gap-3 mb-2">
                      <div className={`w-2 h-2 rounded-full ${item.status === 'up' ? 'bg-green-500' : 'bg-orange-500'}`} />
                      <span className="font-semibold text-base">{item.material}</span>
                      <span className={`text-sm font-semibold flex items-center gap-1 ${
                        item.status === 'up' ? 'text-green-600' : 'text-orange-600'
                      }`}>
                        {item.trend}
                        <Icon name={item.status === 'up' ? 'ArrowUp' : 'ArrowDown'} size={14} />
                      </span>
                    </div>
                    <div className="flex items-center gap-6 ml-5">
                      <div>
                        <p className="text-xs text-muted-foreground">–¢–µ–∫—É—â–∏–π –º–µ—Å—è—Ü</p>
                        <p className="text-lg font-bold text-foreground">{item.current} —Ç</p>
                      </div>
                      <Icon name="ArrowRight" size={20} className="text-muted-foreground" />
                      <div>
                        <p className="text-xs text-muted-foreground">–ü—Ä–æ–≥–Ω–æ–∑</p>
                        <p className="text-lg font-bold text-primary">{item.forecast} —Ç</p>
                      </div>
                    </div>
                  </div>
                  <div className="ml-4">
                    <div className="w-24 h-2 bg-muted rounded-full overflow-hidden">
                      <div 
                        className={`h-full ${
                          item.status === 'up' ? 'bg-green-500' : 'bg-orange-500'
                        }`}
                        style={{ width: `${Math.abs(parseFloat(item.trend))}0%` }}
                      />
                    </div>
                  </div>
                </div>
              ))}
            </div>
            
            <div className="mt-6 p-4 bg-primary/5 rounded-lg border border-primary/20">
              <div className="flex items-start gap-3">
                <Icon name="Info" size={20} className="text-primary mt-0.5" />
                <div>
                  <p className="text-sm font-semibold text-foreground mb-1">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã</p>
                  <p className="text-sm text-muted-foreground">
                    –£–≤–µ–ª–∏—á–∏—Ç—å —Å–∫–ª–∞–¥—Å–∫–∏–µ –∑–∞–ø–∞—Å—ã –∫–∏—Ä–ø–∏—á–∞ –∏ –ø–∏–ª–æ–º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –Ω–∞ 15-20% –¥–ª—è –ø–æ–∫—Ä—ã—Ç–∏—è –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º–æ–≥–æ —Å–ø—Ä–æ—Å–∞. 
                    –†–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å —Å–Ω–∏–∂–µ–Ω–∏–µ –∑–∞–∫—É–ø–∫–∏ –∞—Ä–º–∞—Ç—É—Ä—ã –≤ —Å–≤—è–∑–∏ —Å –ø–∞–¥–µ–Ω–∏–µ–º —Å–ø—Ä–æ—Å–∞.
                  </p>
                </div>
              </div>
            </div>
          </Card>

          <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
            <Card className="p-6 animate-fade-in" style={{ animationDelay: '600ms' }}>
              <div className="flex items-center justify-between mb-6">
                <div>
                  <h3 className="text-lg font-semibold">–ö–∞–Ω–∞–ª—ã —Å–±—ã—Ç–∞</h3>
                  <p className="text-sm text-muted-foreground">–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–¥–∞–∂</p>
                </div>
                <Button 
                  variant="ghost" 
                  size="icon"
                  onClick={() => alert('–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏:\n‚Ä¢ –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n‚Ä¢ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –ø—Ä–æ—à–ª—ã–º –ø–µ—Ä–∏–æ–¥–æ–º\n‚Ä¢ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö')}
                >
                  <Icon name="MoreVertical" size={18} />
                </Button>
              </div>
              <ResponsiveContainer width="100%" height={250}>
                <PieChart>
                  <Pie
                    data={pieData}
                    cx="50%"
                    cy="50%"
                    innerRadius={60}
                    outerRadius={90}
                    paddingAngle={5}
                    dataKey="value"
                  >
                    {pieData.map((entry, index) => (
                      <Cell key={`cell-${index}`} fill={entry.color} />
                    ))}
                  </Pie>
                  <Tooltip />
                </PieChart>
              </ResponsiveContainer>
              <div className="mt-4 space-y-2">
                {pieData.map((item, index) => (
                  <div key={index} className="flex items-center justify-between">
                    <div className="flex items-center gap-2">
                      <div className="w-3 h-3 rounded-full" style={{ backgroundColor: item.color }} />
                      <span className="text-sm">{item.name}</span>
                    </div>
                    <span className="text-sm font-semibold">{item.value}%</span>
                  </div>
                ))}
              </div>
            </Card>

            <Card className="p-6 lg:col-span-2 animate-fade-in" style={{ animationDelay: '700ms' }}>
              <div className="flex items-center justify-between mb-6">
                <div>
                  <h3 className="text-lg font-semibold">–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏</h3>
                  <p className="text-sm text-muted-foreground">–ù–µ–¥–∞–≤–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</p>
                </div>
                <Button 
                  variant="outline" 
                  size="sm"
                  onClick={() => {
                    setActiveTab('history');
                    alert('–ü–µ—Ä–µ—Ö–æ–¥ –≤ –ø–æ–ª–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é –æ–ø–µ—Ä–∞—Ü–∏–π...');
                  }}
                >
                  –°–º–æ—Ç—Ä–µ—Ç—å –≤—Å—ë
                </Button>
              </div>
              <div className="space-y-4">
                {[
                  { type: 'sale', desc: '–ó–∞–∫–∞–∑ #–ó–ö-2845 - –£—Ç–µ–ø–ª–∏—Ç–µ–ª—å ROCKWOOL', amount: '+‚ÇΩ342,500', time: '8 –º–∏–Ω –Ω–∞–∑–∞–¥', status: 'success' },
                  { type: 'sale', desc: '–ó–∞–∫–∞–∑ #–ó–ö-2843 - –ì–∏–¥—Ä–æ–∏–∑–æ–ª—è—Ü–∏—è –¢–ï–•–ù–û–ù–ò–ö–û–õ–¨', amount: '+‚ÇΩ189,300', time: '45 –º–∏–Ω –Ω–∞–∑–∞–¥', status: 'success' },
                  { type: 'refund', desc: '–í–æ–∑–≤—Ä–∞—Ç #–ó–ö-2811 - –ì–µ–æ—Å–∏–Ω—Ç–µ—Ç–∏–∫–∞', amount: '-‚ÇΩ43,400', time: '2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥', status: 'warning' },
                  { type: 'sale', desc: '–ó–∞–∫–∞–∑ #–ó–ö-2840 - –ü–ª–æ—Å–∫–∞—è –∫—Ä–æ–≤–ª—è', amount: '+‚ÇΩ615,800', time: '3 —á–∞—Å–∞ –Ω–∞–∑–∞–¥', status: 'success' },
                ].map((transaction, index) => (
                  <div key={index} className="flex items-center justify-between p-4 rounded-lg hover:bg-muted/50 transition-colors">
                    <div className="flex items-center gap-4">
                      <div className={`w-10 h-10 rounded-full flex items-center justify-center ${
                        transaction.status === 'success' ? 'bg-green-100' : 'bg-orange-100'
                      }`}>
                        <Icon 
                          name={transaction.type === 'sale' ? 'ArrowUpRight' : 'ArrowDownLeft'} 
                          size={18}
                          className={transaction.status === 'success' ? 'text-green-600' : 'text-orange-600'}
                        />
                      </div>
                      <div>
                        <p className="font-medium">{transaction.desc}</p>
                        <p className="text-sm text-muted-foreground">{transaction.time}</p>
                      </div>
                    </div>
                    <span className={`font-semibold ${
                      transaction.status === 'success' ? 'text-green-600' : 'text-orange-600'
                    }`}>
                      {transaction.amount}
                    </span>
                  </div>
                ))}
              </div>
            </Card>
          </div>
            </>
          )}
        </div>
      </main>

      <Dialog open={modalOpen} onOpenChange={setModalOpen}>
        <DialogContent className="max-w-2xl max-h-[80vh] overflow-y-auto">
          {modalContent?.type === 'metric' && (
            <>
              <DialogHeader>
                <DialogTitle className="flex items-center gap-3">
                  <div className="w-12 h-12 rounded-xl bg-primary/10 flex items-center justify-center">
                    <Icon name={modalContent.icon} size={24} className="text-primary" />
                  </div>
                  <div>
                    <h3 className="text-2xl font-bold">{modalContent.title}</h3>
                    <p className="text-sm text-muted-foreground font-normal">–î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</p>
                  </div>
                </DialogTitle>
              </DialogHeader>
              
              <div className="space-y-6 mt-4">
                <div className="grid grid-cols-2 gap-4">
                  <Card className="p-4 bg-primary/5">
                    <p className="text-sm text-muted-foreground mb-1">–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ</p>
                    <p className="text-3xl font-bold text-primary">{modalContent.value}</p>
                  </Card>
                  <Card className="p-4 bg-secondary/5">
                    <p className="text-sm text-muted-foreground mb-1">–ò–∑–º–µ–Ω–µ–Ω–∏–µ</p>
                    <p className={`text-3xl font-bold ${modalContent.trend === 'up' ? 'text-green-600' : 'text-red-600'}`}>
                      {modalContent.change}
                    </p>
                  </Card>
                </div>

                <Separator />

                <Tabs defaultValue="week" className="w-full">
                  <TabsList className="grid w-full grid-cols-3">
                    <TabsTrigger value="week">–ù–µ–¥–µ–ª—è</TabsTrigger>
                    <TabsTrigger value="month">–ú–µ—Å—è—Ü</TabsTrigger>
                    <TabsTrigger value="year">–ì–æ–¥</TabsTrigger>
                  </TabsList>
                  <TabsContent value="week" className="space-y-4">
                    <div className="space-y-3">
                      <div className="flex justify-between items-center p-3 bg-muted/50 rounded-lg">
                        <span className="text-sm">–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫</span>
                        <Badge variant="outline">+2.3%</Badge>
                      </div>
                      <div className="flex justify-between items-center p-3 bg-muted/50 rounded-lg">
                        <span className="text-sm">–í—Ç–æ—Ä–Ω–∏–∫</span>
                        <Badge variant="outline">+5.1%</Badge>
                      </div>
                      <div className="flex justify-between items-center p-3 bg-muted/50 rounded-lg">
                        <span className="text-sm">–°—Ä–µ–¥–∞</span>
                        <Badge variant="outline">+3.8%</Badge>
                      </div>
                      <div className="flex justify-between items-center p-3 bg-muted/50 rounded-lg">
                        <span className="text-sm">–ß–µ—Ç–≤–µ—Ä–≥</span>
                        <Badge variant="outline">+1.9%</Badge>
                      </div>
                      <div className="flex justify-between items-center p-3 bg-muted/50 rounded-lg">
                        <span className="text-sm">–ü—è—Ç–Ω–∏—Ü–∞</span>
                        <Badge variant="outline">+2.2%</Badge>
                      </div>
                    </div>
                  </TabsContent>
                  <TabsContent value="month" className="space-y-4">
                    <p className="text-sm text-muted-foreground">–î–∞–Ω–Ω—ã–µ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç —Å—Ç–∞–±–∏–ª—å–Ω—ã–π —Ä–æ—Å—Ç –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è.</p>
                    <div className="grid grid-cols-2 gap-4">
                      <div className="p-4 bg-muted/50 rounded-lg">
                        <p className="text-xs text-muted-foreground mb-1">–ù–µ–¥–µ–ª—è 1</p>
                        <p className="text-xl font-bold">+4.2%</p>
                      </div>
                      <div className="p-4 bg-muted/50 rounded-lg">
                        <p className="text-xs text-muted-foreground mb-1">–ù–µ–¥–µ–ª—è 2</p>
                        <p className="text-xl font-bold">+6.8%</p>
                      </div>
                      <div className="p-4 bg-muted/50 rounded-lg">
                        <p className="text-xs text-muted-foreground mb-1">–ù–µ–¥–µ–ª—è 3</p>
                        <p className="text-xl font-bold">+3.5%</p>
                      </div>
                      <div className="p-4 bg-muted/50 rounded-lg">
                        <p className="text-xs text-muted-foreground mb-1">–ù–µ–¥–µ–ª—è 4</p>
                        <p className="text-xl font-bold">+5.1%</p>
                      </div>
                    </div>
                  </TabsContent>
                  <TabsContent value="year" className="space-y-4">
                    <p className="text-sm text-muted-foreground">–ì–æ–¥–æ–≤–∞—è –¥–∏–Ω–∞–º–∏–∫–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—É—é —Ç–µ–Ω–¥–µ–Ω—Ü–∏—é —Ä–æ—Å—Ç–∞.</p>
                    <div className="space-y-2">
                      {['–Ø–Ω–≤', '–§–µ–≤', '–ú–∞—Ä', '–ê–ø—Ä', '–ú–∞–π', '–ò—é–Ω', '–ò—é–ª', '–ê–≤–≥', '–°–µ–Ω', '–û–∫—Ç'].map((month, idx) => (
                        <div key={month} className="flex justify-between items-center p-2 hover:bg-muted/50 rounded">
                          <span className="text-sm">{month}</span>
                          <span className="text-sm font-semibold text-green-600">+{(Math.random() * 10 + 2).toFixed(1)}%</span>
                        </div>
                      ))}
                    </div>
                  </TabsContent>
                </Tabs>
              </div>
            </>
          )}

          {modalContent?.type === 'notifications' && (
            <>
              <DialogHeader>
                <DialogTitle className="flex items-center gap-2">
                  <Icon name="Bell" size={24} className="text-primary" />
                  –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                </DialogTitle>
                <DialogDescription>
                  –í–∞–∂–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã
                </DialogDescription>
              </DialogHeader>
              
              <div className="space-y-3 mt-4">
                <Card className="p-4 border-l-4 border-l-orange-500 bg-orange-50/50">
                  <div className="flex items-start gap-3">
                    <div className="w-10 h-10 rounded-full bg-orange-100 flex items-center justify-center">
                      <Icon name="AlertTriangle" size={20} className="text-orange-600" />
                    </div>
                    <div className="flex-1">
                      <p className="font-semibold text-sm">–ù–∏–∑–∫–∏–π –∑–∞–ø–∞—Å —É—Ç–µ–ø–ª–∏—Ç–µ–ª—è –Ω–∞ —Å–∫–ª–∞–¥–µ ‚Ññ3</p>
                      <p className="text-xs text-muted-foreground mt-1">–û—Å—Ç–∞–ª–æ—Å—å 1,245 –º¬≤. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–æ–ø–æ–ª–Ω–∏—Ç—å –∑–∞–ø–∞—Å ROCKWOOL.</p>
                      <p className="text-xs text-muted-foreground mt-2">15 –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥</p>
                    </div>
                  </div>
                </Card>

                <Card className="p-4 border-l-4 border-l-blue-500 bg-blue-50/50">
                  <div className="flex items-start gap-3">
                    <div className="w-10 h-10 rounded-full bg-blue-100 flex items-center justify-center">
                      <Icon name="ShoppingCart" size={20} className="text-blue-600" />
                    </div>
                    <div className="flex-1">
                      <p className="font-semibold text-sm">–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ #–ó–ö-2850</p>
                      <p className="text-xs text-muted-foreground mt-1">–ì–∏–¥—Ä–æ–∏–∑–æ–ª—è—Ü–∏—è –¢–ï–•–ù–û–ù–ò–ö–û–õ–¨ - 3,800 –º¬≤. –ö–ª–∏–µ–Ω—Ç: –û–û–û "–°—Ç—Ä–æ–π–¢–µ—Ö"</p>
                      <p className="text-xs text-muted-foreground mt-2">1 —á–∞—Å –Ω–∞–∑–∞–¥</p>
                    </div>
                  </div>
                </Card>

                <Card className="p-4 border-l-4 border-l-green-500 bg-green-50/50">
                  <div className="flex items-start gap-3">
                    <div className="w-10 h-10 rounded-full bg-green-100 flex items-center justify-center">
                      <Icon name="CheckCircle" size={20} className="text-green-600" />
                    </div>
                    <div className="flex-1">
                      <p className="font-semibold text-sm">–ó–∞–≤–µ—Ä—à–µ–Ω–∞ –æ—Ç–≥—Ä—É–∑–∫–∞ #–ó–ö-2842</p>
                      <p className="text-xs text-muted-foreground mt-1">–ü–ª–æ—Å–∫–∞—è –∫—Ä–æ–≤–ª—è - 2,145 –º¬≤ —É—Å–ø–µ—à–Ω–æ –æ—Ç–≥—Ä—É–∂–µ–Ω–∞.</p>
                      <p className="text-xs text-muted-foreground mt-2">3 —á–∞—Å–∞ –Ω–∞–∑–∞–¥</p>
                    </div>
                  </div>
                </Card>
              </div>
            </>
          )}

          {modalContent?.type === 'export' && (
            <>
              <DialogHeader>
                <DialogTitle className="flex items-center gap-2">
                  <Icon name="Download" size={24} className="text-primary" />
                  –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
                </DialogTitle>
                <DialogDescription>
                  –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —ç–∫—Å–ø–æ—Ä—Ç–∞
                </DialogDescription>
              </DialogHeader>
              
              <div className="space-y-4 mt-4">
                <div className="grid grid-cols-2 gap-4">
                  <Button 
                    variant="outline" 
                    className="h-24 flex-col gap-2"
                    onClick={() => {
                      setModalOpen(false);
                      setTimeout(() => alert(`–§–∞–π–ª "–ë–∞—É—Å—Ç–æ–≤_–û—Ç—á—ë—Ç_${modalContent.dateRange}.xlsx" –∑–∞–≥—Ä—É–∂–µ–Ω!`), 300);
                    }}
                  >
                    <Icon name="FileSpreadsheet" size={32} className="text-green-600" />
                    <span>Excel (.xlsx)</span>
                  </Button>
                  <Button 
                    variant="outline" 
                    className="h-24 flex-col gap-2"
                    onClick={() => {
                      setModalOpen(false);
                      setTimeout(() => alert(`–§–∞–π–ª "–ë–∞—É—Å—Ç–æ–≤_–û—Ç—á—ë—Ç_${modalContent.dateRange}.pdf" –∑–∞–≥—Ä—É–∂–µ–Ω!`), 300);
                    }}
                  >
                    <Icon name="FileText" size={32} className="text-red-600" />
                    <span>PDF (.pdf)</span>
                  </Button>
                  <Button 
                    variant="outline" 
                    className="h-24 flex-col gap-2"
                    onClick={() => {
                      setModalOpen(false);
                      setTimeout(() => alert(`–§–∞–π–ª "–ë–∞—É—Å—Ç–æ–≤_–û—Ç—á—ë—Ç_${modalContent.dateRange}.csv" –∑–∞–≥—Ä—É–∂–µ–Ω!`), 300);
                    }}
                  >
                    <Icon name="Database" size={32} className="text-blue-600" />
                    <span>CSV (.csv)</span>
                  </Button>
                  <Button 
                    variant="outline" 
                    className="h-24 flex-col gap-2"
                    onClick={() => {
                      setModalOpen(false);
                      setTimeout(() => alert(`–î–∞–Ω–Ω—ã–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!`), 300);
                    }}
                  >
                    <Icon name="Copy" size={32} className="text-purple-600" />
                    <span>–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å</span>
                  </Button>
                </div>

                <Separator />

                <div className="space-y-3">
                  <h4 className="font-semibold text-sm">–ü–∞—Ä–∞–º–µ—Ç—Ä—ã —ç–∫—Å–ø–æ—Ä—Ç–∞</h4>
                  <div className="space-y-2">
                    <label className="flex items-center gap-2 text-sm">
                      <input type="checkbox" defaultChecked className="rounded" />
                      –í–∫–ª—é—á–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫–∏
                    </label>
                    <label className="flex items-center gap-2 text-sm">
                      <input type="checkbox" defaultChecked className="rounded" />
                      –í–∫–ª—é—á–∏—Ç—å —Ç–∞–±–ª–∏—Ü—ã
                    </label>
                    <label className="flex items-center gap-2 text-sm">
                      <input type="checkbox" className="rounded" />
                      –í–∫–ª—é—á–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑—ã
                    </label>
                  </div>
                </div>
              </div>
            </>
          )}

          {modalContent?.type === 'product' && modalContent.product && (
            <>
              <DialogHeader>
                <DialogTitle className="flex items-center gap-3">
                  <div className="w-16 h-16 rounded-xl bg-gradient-to-br from-primary/10 to-secondary/10 flex items-center justify-center text-4xl">
                    {modalContent.product.image}
                  </div>
                  <div className="flex-1">
                    <p className="text-sm text-primary font-semibold">{modalContent.product.brand}</p>
                    <h3 className="text-xl font-bold mt-1">{modalContent.product.name}</h3>
                  </div>
                </DialogTitle>
                <DialogDescription>
                  –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ
                </DialogDescription>
              </DialogHeader>
              
              <div className="space-y-6 mt-4">
                <div className="grid grid-cols-2 gap-4">
                  <Card className="p-4 bg-primary/5">
                    <p className="text-sm text-muted-foreground mb-1">–¶–µ–Ω–∞</p>
                    <p className="text-2xl font-bold text-primary">{modalContent.product.price}</p>
                  </Card>
                  <Card className="p-4 bg-green-50">
                    <p className="text-sm text-muted-foreground mb-1">–í –Ω–∞–ª–∏—á–∏–∏</p>
                    <p className="text-2xl font-bold text-green-600">{modalContent.product.stock.toLocaleString()} –º¬≤</p>
                  </Card>
                </div>

                <div className="flex items-center gap-2">
                  <div className="flex items-center gap-1">
                    {[...Array(5)].map((_, i) => (
                      <Icon 
                        key={i} 
                        name="Star" 
                        size={20} 
                        className={i < Math.floor(modalContent.product.rating) ? 'fill-yellow-400 text-yellow-400' : 'text-gray-300'}
                      />
                    ))}
                  </div>
                  <span className="text-lg font-semibold">{modalContent.product.rating}</span>
                  <span className="text-sm text-muted-foreground">(248 –æ—Ç–∑—ã–≤–æ–≤)</span>
                </div>

                <Separator />

                <div className="space-y-3">
                  <h4 className="font-semibold">–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</h4>
                  <div className="space-y-2">
                    <div className="flex justify-between p-3 bg-muted/50 rounded">
                      <span className="text-sm text-muted-foreground">–†–∞–∑–º–µ—Ä—ã</span>
                      <span className="text-sm font-semibold">{modalContent.product.specs}</span>
                    </div>
                    <div className="flex justify-between p-3 bg-muted/50 rounded">
                      <span className="text-sm text-muted-foreground">–ë—Ä–µ–Ω–¥</span>
                      <span className="text-sm font-semibold">{modalContent.product.brand}</span>
                    </div>
                    <div className="flex justify-between p-3 bg-muted/50 rounded">
                      <span className="text-sm text-muted-foreground">–ö–∞—Ç–µ–≥–æ—Ä–∏—è</span>
                      <span className="text-sm font-semibold">
                        {categories.find(c => c.id === modalContent.product.category)?.label || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}
                      </span>
                    </div>
                  </div>
                </div>

                <Separator />

                <div className="space-y-3">
                  <h4 className="font-semibold">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ</h4>
                  <div className="flex items-center gap-3">
                    <Button 
                      variant="outline" 
                      size="icon"
                      onClick={() => setProductQuantity(Math.max(1, productQuantity - 1))}
                    >
                      <Icon name="Minus" size={18} />
                    </Button>
                    <input 
                      type="number" 
                      value={productQuantity}
                      onChange={(e) => setProductQuantity(Math.max(1, parseInt(e.target.value) || 1))}
                      min="1"
                      className="w-24 text-center border border-input rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-ring"
                    />
                    <Button 
                      variant="outline" 
                      size="icon"
                      onClick={() => setProductQuantity(productQuantity + 1)}
                    >
                      <Icon name="Plus" size={18} />
                    </Button>
                    <span className="text-sm text-muted-foreground ml-2">–º¬≤</span>
                  </div>
                </div>

                <div className="flex gap-3">
                  <Button 
                    className="flex-1" 
                    size="lg"
                    onClick={() => addToCart(modalContent.product, productQuantity)}
                  >
                    <Icon name="ShoppingCart" size={20} className="mr-2" />
                    –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
                  </Button>
                  <Button variant="outline" size="lg">
                    <Icon name="Heart" size={20} />
                  </Button>
                </div>
              </div>
            </>
          )}

          {modalContent?.type === 'refresh' && (
            <>
              <DialogHeader>
                <DialogTitle className="flex items-center gap-2">
                  <Icon name="RefreshCcw" size={24} className="text-primary" />
                  –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
                </DialogTitle>
              </DialogHeader>
              
              <div className="space-y-4 mt-4">
                <div className="flex items-center gap-3 p-4 bg-green-50 border border-green-200 rounded-lg">
                  <Icon name="CheckCircle" size={24} className="text-green-600" />
                  <div>
                    <p className="font-semibold text-sm">–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã</p>
                    <p className="text-xs text-muted-foreground mt-1">–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: —Ç–æ–ª—å–∫–æ —á—Ç–æ</p>
                  </div>
                </div>

                <div className="space-y-2">
                  <div className="flex justify-between items-center p-3 bg-muted/50 rounded">
                    <span className="text-sm">–ú–µ—Ç—Ä–∏–∫–∏ –¥–∞—à–±–æ—Ä–¥–∞</span>
                    <Icon name="Check" size={18} className="text-green-600" />
                  </div>
                  <div className="flex justify-between items-center p-3 bg-muted/50 rounded">
                    <span className="text-sm">–ì—Ä–∞—Ñ–∏–∫–∏ –∏ –¥–∏–∞–≥—Ä–∞–º–º—ã</span>
                    <Icon name="Check" size={18} className="text-green-600" />
                  </div>
                  <div className="flex justify-between items-center p-3 bg-muted/50 rounded">
                    <span className="text-sm">–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ—Å—Ç–∞–≤–æ–∫</span>
                    <Icon name="Check" size={18} className="text-green-600" />
                  </div>
                  <div className="flex justify-between items-center p-3 bg-muted/50 rounded">
                    <span className="text-sm">–ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π</span>
                    <Icon name="Check" size={18} className="text-green-600" />
                  </div>
                </div>

                <Button className="w-full" onClick={() => setModalOpen(false)}>
                  –ó–∞–∫—Ä—ã—Ç—å
                </Button>
              </div>
            </>
          )}
        </DialogContent>
      </Dialog>

      <Dialog open={cartOpen} onOpenChange={setCartOpen}>
        <DialogContent className="max-w-3xl max-h-[85vh] overflow-y-auto">
          <DialogHeader>
            <DialogTitle className="flex items-center gap-2">
              <Icon name="ShoppingCart" size={24} className="text-primary" />
              –ö–æ—Ä–∑–∏–Ω–∞
              {getCartItemsCount() > 0 && (
                <Badge variant="secondary" className="ml-2">
                  {getCartItemsCount()} —Ç–æ–≤–∞—Ä–æ–≤
                </Badge>
              )}
            </DialogTitle>
            <DialogDescription>
              –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à –∑–∞–∫–∞–∑ –∏ –æ—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ–∫—É–ø–∫—É
            </DialogDescription>
          </DialogHeader>

          {cart.length === 0 ? (
            <div className="py-12 text-center">
              <Icon name="ShoppingCart" size={64} className="mx-auto text-muted-foreground mb-4" />
              <h3 className="text-xl font-semibold mb-2">–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</h3>
              <p className="text-muted-foreground mb-6">–î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞</p>
              <Button onClick={() => { setCartOpen(false); setActiveTab('catalog'); }}>
                –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥
              </Button>
            </div>
          ) : (
            <div className="space-y-6">
              <div className="space-y-3">
                {cart.map((item) => (
                  <Card key={item.id} className="p-4">
                    <div className="flex items-start gap-4">
                      <div className="w-20 h-20 rounded-lg bg-gradient-to-br from-primary/5 to-secondary/5 flex items-center justify-center text-3xl flex-shrink-0">
                        {item.image}
                      </div>
                      <div className="flex-1 min-w-0">
                        <p className="text-xs text-primary font-semibold">{item.brand}</p>
                        <h4 className="font-semibold text-sm mt-1">{item.name}</h4>
                        <p className="text-xs text-muted-foreground mt-1">{item.specs}</p>
                        <div className="flex items-center gap-3 mt-3">
                          <Button 
                            variant="outline" 
                            size="icon" 
                            className="h-8 w-8"
                            onClick={() => updateCartQuantity(item.id, item.quantity - 1)}
                          >
                            <Icon name="Minus" size={14} />
                          </Button>
                          <span className="text-sm font-semibold w-12 text-center">{item.quantity} –º¬≤</span>
                          <Button 
                            variant="outline" 
                            size="icon" 
                            className="h-8 w-8"
                            onClick={() => updateCartQuantity(item.id, item.quantity + 1)}
                          >
                            <Icon name="Plus" size={14} />
                          </Button>
                        </div>
                      </div>
                      <div className="text-right flex-shrink-0">
                        <p className="text-lg font-bold text-primary">
                          ‚ÇΩ{(parseInt(item.price.replace(/[^0-9]/g, '')) * item.quantity).toLocaleString()}
                        </p>
                        <p className="text-xs text-muted-foreground mt-1">{item.price}</p>
                        <Button 
                          variant="ghost" 
                          size="sm" 
                          className="mt-2 text-destructive hover:text-destructive"
                          onClick={() => removeFromCart(item.id)}
                        >
                          <Icon name="Trash2" size={16} className="mr-1" />
                          –£–¥–∞–ª–∏—Ç—å
                        </Button>
                      </div>
                    </div>
                  </Card>
                ))}
              </div>

              <Separator />

              <Card className="p-6 bg-muted/30">
                <div className="space-y-3">
                  <div className="flex justify-between text-sm">
                    <span className="text-muted-foreground">–¢–æ–≤–∞—Ä—ã ({getCartItemsCount()} –º¬≤)</span>
                    <span className="font-semibold">‚ÇΩ{getCartTotal().toLocaleString()}</span>
                  </div>
                  <div className="flex justify-between text-sm">
                    <span className="text-muted-foreground">–î–æ—Å—Ç–∞–≤–∫–∞</span>
                    <span className="font-semibold text-green-600">–ë–µ—Å–ø–ª–∞—Ç–Ω–æ</span>
                  </div>
                  <Separator />
                  <div className="flex justify-between text-lg">
                    <span className="font-bold">–ò—Ç–æ–≥–æ</span>
                    <span className="font-bold text-primary text-2xl">‚ÇΩ{getCartTotal().toLocaleString()}</span>
                  </div>
                </div>
              </Card>

              <form onSubmit={(e) => {
                e.preventDefault();
                const formData = new FormData(e.currentTarget);
                const customerData = {
                  name: formData.get('name'),
                  phone: formData.get('phone'),
                  email: formData.get('email'),
                  address: formData.get('address'),
                  comment: formData.get('comment')
                };
                const orderId = createOrder(customerData);
                setCartOpen(false);
                setCart([]);
                openModal({ type: 'order-success', orderId });
              }}>
                <div className="space-y-4">
                  <h4 className="font-semibold">–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</h4>
                  <div className="grid grid-cols-2 gap-3">
                    <div>
                      <label className="text-sm text-muted-foreground mb-1 block">–ò–º—è</label>
                      <input 
                        type="text" 
                        name="name"
                        placeholder="–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤"
                        required
                        className="w-full border border-input rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-ring"
                      />
                    </div>
                    <div>
                      <label className="text-sm text-muted-foreground mb-1 block">–¢–µ–ª–µ—Ñ–æ–Ω</label>
                      <input 
                        type="tel" 
                        name="phone"
                        placeholder="+7 (999) 123-45-67"
                        required
                        className="w-full border border-input rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-ring"
                      />
                    </div>
                    <div className="col-span-2">
                      <label className="text-sm text-muted-foreground mb-1 block">Email</label>
                      <input 
                        type="email" 
                        name="email"
                        placeholder="info@example.com"
                        required
                        className="w-full border border-input rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-ring"
                      />
                    </div>
                    <div className="col-span-2">
                      <label className="text-sm text-muted-foreground mb-1 block">–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏</label>
                      <textarea 
                        name="address"
                        placeholder="–ú–æ—Å–∫–≤–∞, —É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, –¥. 123, –æ—Ñ–∏—Å 456"
                        rows={2}
                        required
                        className="w-full border border-input rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-ring"
                      />
                    </div>
                    <div className="col-span-2">
                      <label className="text-sm text-muted-foreground mb-1 block">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞–∫–∞–∑—É (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)</label>
                      <textarea 
                        name="comment"
                        placeholder="–£–∫–∞–∂–∏—Ç–µ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏ –∏–ª–∏ –¥—Ä—É–≥–∏–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è"
                        rows={2}
                        className="w-full border border-input rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-ring"
                      />
                    </div>
                  </div>
                </div>

                <div className="flex gap-3 mt-6">
                  <Button 
                    type="button"
                    variant="outline" 
                    className="flex-1"
                    onClick={() => setCartOpen(false)}
                  >
                    –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∫—É–ø–∫–∏
                  </Button>
                  <Button 
                    type="submit"
                    className="flex-1" 
                    size="lg"
                  >
                    <Icon name="CheckCircle" size={20} className="mr-2" />
                    –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ –Ω–∞ ‚ÇΩ{getCartTotal().toLocaleString()}
                  </Button>
                </div>
              </form>
            </div>
          )}
        </DialogContent>
      </Dialog>

      <Dialog open={modalOpen && modalContent?.type === 'order-success'} onOpenChange={(open) => { if (!open) setModalOpen(false); }}>
        <DialogContent className="max-w-md">
          <div className="text-center py-6">
            <div className="w-20 h-20 rounded-full bg-green-100 flex items-center justify-center mx-auto mb-4">
              <Icon name="CheckCircle" size={48} className="text-green-600" />
            </div>
            <h3 className="text-2xl font-bold mb-2">–ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω!</h3>
            <p className="text-muted-foreground mb-6">
              –ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: #{modalContent?.orderId || '–ó–ö-' + Math.floor(Math.random() * 10000 + 2000)}
            </p>
            <Card className="p-4 bg-muted/30 mb-6 text-left">
              <p className="text-sm text-muted-foreground mb-2">–ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ</p>
              <p className="text-2xl font-bold text-primary">15 –º–∏–Ω—É—Ç</p>
            </Card>
            <div className="space-y-2 mb-6">
              <div className="flex items-center gap-2 text-sm">
                <Icon name="Mail" size={16} className="text-muted-foreground" />
                <span>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ email</span>
              </div>
              <div className="flex items-center gap-2 text-sm">
                <Icon name="Phone" size={16} className="text-muted-foreground" />
                <span>–û–∂–∏–¥–∞–π—Ç–µ –∑–≤–æ–Ω–æ–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞</span>
              </div>
            </div>
            <Button className="w-full" onClick={() => { setModalOpen(false); setActiveTab('dashboard'); }}>
              –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
            </Button>
          </div>
        </DialogContent>
      </Dialog>

      <Dialog open={modalOpen && modalContent?.type === 'order-details'} onOpenChange={(open) => { if (!open) setModalOpen(false); }}>
        <DialogContent className="max-w-3xl max-h-[85vh] overflow-y-auto">
          {modalContent?.order && (
            <>
              <DialogHeader>
                <DialogTitle className="flex items-center gap-3">
                  <div className="w-12 h-12 rounded-xl bg-primary/10 flex items-center justify-center">
                    <Icon name="Package" size={24} className="text-primary" />
                  </div>
                  <div>
                    <h3 className="text-2xl font-bold">–ó–∞–∫–∞–∑ #{modalContent.order.id}</h3>
                    <p className="text-sm text-muted-foreground font-normal">
                      {new Date(modalContent.order.date).toLocaleDateString('ru-RU', { day: 'numeric', month: 'long', year: 'numeric' })}
                    </p>
                  </div>
                </DialogTitle>
                <DialogDescription>
                  –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –¥–æ—Å—Ç–∞–≤–∫–∏
                </DialogDescription>
              </DialogHeader>

              <div className="space-y-6 mt-4">
                <Card className="p-6 bg-muted/30">
                  <div className="grid grid-cols-2 gap-4">
                    <div>
                      <p className="text-sm text-muted-foreground mb-1">–ö–ª–∏–µ–Ω—Ç</p>
                      <p className="font-semibold">{modalContent.order.customer}</p>
                    </div>
                    <div>
                      <p className="text-sm text-muted-foreground mb-1">–°—Ç–∞—Ç—É—Å</p>
                      <Badge className={getStatusColor(modalContent.order.status)}>
                        {getStatusLabel(modalContent.order.status)}
                      </Badge>
                    </div>
                    <div className="col-span-2">
                      <p className="text-sm text-muted-foreground mb-1">–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏</p>
                      <div className="flex items-start gap-2">
                        <Icon name="MapPin" size={16} className="text-primary mt-1 flex-shrink-0" />
                        <p className="font-semibold">{modalContent.order.address}</p>
                      </div>
                    </div>
                    <div className="col-span-2">
                      <p className="text-sm text-muted-foreground mb-1">–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞</p>
                      <p className="text-3xl font-bold text-primary">‚ÇΩ{modalContent.order.total.toLocaleString()}</p>
                    </div>
                  </div>
                </Card>

                <div>
                  <h4 className="font-semibold mb-3">–°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞</h4>
                  <div className="space-y-2">
                    {modalContent.order.items.map((item: any, idx: number) => (
                      <Card key={idx} className="p-4">
                        <div className="flex items-center justify-between">
                          <div className="flex items-center gap-3">
                            <div className="w-12 h-12 rounded-lg bg-gradient-to-br from-primary/5 to-secondary/5 flex items-center justify-center text-2xl">
                              {item.image}
                            </div>
                            <div>
                              <p className="font-semibold">{item.name}</p>
                              <p className="text-sm text-muted-foreground">{item.quantity} –º¬≤ √ó ‚ÇΩ{item.price.toLocaleString()}</p>
                            </div>
                          </div>
                          <p className="text-lg font-bold text-primary">‚ÇΩ{(item.quantity * item.price).toLocaleString()}</p>
                        </div>
                      </Card>
                    ))}
                  </div>
                </div>

                <Separator />

                <div>
                  <h4 className="font-semibold mb-4">–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –¥–æ—Å—Ç–∞–≤–∫–∏</h4>
                  <div className="relative">
                    <div className="absolute left-5 top-0 bottom-0 w-0.5 bg-border" />
                    <div className="space-y-6">
                      {modalContent.order.trackingSteps.map((step: any, idx: number) => (
                        <div key={idx} className="relative flex items-start gap-4">
                          <div className={`w-10 h-10 rounded-full flex items-center justify-center z-10 flex-shrink-0 ${
                            step.completed ? 'bg-green-100' : 'bg-muted'
                          }`}>
                            {step.completed ? (
                              <Icon name="Check" size={20} className="text-green-600" />
                            ) : (
                              <Icon name="Clock" size={20} className="text-muted-foreground" />
                            )}
                          </div>
                          <div className="flex-1 pt-2">
                            <p className={`font-semibold ${step.completed ? 'text-foreground' : 'text-muted-foreground'}`}>
                              {step.label}
                            </p>
                            {step.date && (
                              <p className="text-sm text-muted-foreground mt-1">{step.date}</p>
                            )}
                            {!step.completed && step.estimated && (
                              <p className="text-sm text-muted-foreground mt-1">–û–∂–∏–¥–∞–µ—Ç—Å—è: {step.estimated}</p>
                            )}
                          </div>
                        </div>
                      ))}
                    </div>
                  </div>
                </div>

                {modalContent.order.status !== 'cancelled' && modalContent.order.status !== 'delivered' && (
                  <Card className="p-4 bg-blue-50 border-blue-200">
                    <div className="flex items-start gap-3">
                      <Icon name="Info" size={20} className="text-blue-600 mt-0.5 flex-shrink-0" />
                      <div>
                        <p className="font-semibold text-sm text-blue-900">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –¥–æ—Å—Ç–∞–≤–∫–µ</p>
                        <p className="text-sm text-blue-700 mt-1">
                          –ú—ã –æ—Ç–ø—Ä–∞–≤–∏–º SMS-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∑–∞ —á–∞—Å –¥–æ –¥–æ—Å—Ç–∞–≤–∫–∏
                        </p>
                      </div>
                    </div>
                  </Card>
                )}

                <div className="flex gap-3">
                  <Button variant="outline" className="flex-1" onClick={() => setModalOpen(false)}>
                    –ó–∞–∫—Ä—ã—Ç—å
                  </Button>
                  {modalContent.order.status === 'processing' && (
                    <Button variant="destructive" className="flex-1">
                      <Icon name="X" size={18} className="mr-2" />
                      –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑
                    </Button>
                  )}
                  {modalContent.order.status === 'delivered' && (
                    <Button className="flex-1">
                      <Icon name="RefreshCcw" size={18} className="mr-2" />
                      –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–∫–∞–∑
                    </Button>
                  )}
                </div>
              </div>
            </>
          )}
        </DialogContent>
      </Dialog>
    </div>
  );
};

export default Index;